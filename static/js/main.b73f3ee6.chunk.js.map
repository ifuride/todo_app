{"version":3,"sources":["types/Status.ts","components/Header/Header.tsx","components/TodoCount/TodoCount.tsx","components/TodosFilter/TodosFilter.tsx","components/DeleteCompletedButton/DeleteCompletedButton.tsx","components/Footer/Footer.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","utils/fetchClient.ts","api/todos.ts","App.tsx","helpers/getVisibleTodos.tsx","index.tsx"],"names":["Status","Header","title","setTitle","onSaveNewTodo","handleSubmit","event","preventDefault","className","action","onSubmit","onBlur","type","name","data-cy","placeholder","value","onChange","target","TodoCount","activeTodosQty","todos","filter","todo","completed","length","TodosFilter","filterBy","onChangeFilter","to","classNames","selected","ALL","onClick","ACTIVE","COMPLETED","DeleteCompletedButton","onDeleteCompletedTodos","completedTodos","disabled","style","opacity","cursor","Footer","TodoItem","onUpdateTodo","onDeleteTodo","id","useState","isInEditMode","setIsInEditMode","newTitle","setNewTitle","expired","setExpired","inputRef","useRef","useEffect","current","focus","handleTitleUpdate","trim","onDoubleClick","onTouchStart","touches","timeStamp","onKeyDown","key","ref","checked","aria-label","TodoList","map","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","client","updateTodo","todoId","deleteTodo","App","setTodos","setFilterBy","errorMessage","setErrorMessage","clearError","loadedTodos","localStorage","getItem","parse","setItem","loadTodos","a","todosFromServer","message","visibleTodos","currentFilter","getVisibleTodos","handleAddNewTodo","newTodo","userId","addedTodo","prevTodos","handleUpdateTodo","parameterToUpdate","isAllCompleted","every","handleToggleAll","forEach","handleRemoveTodo","htmlFor","hidden","createRoot","document","getElementById","render"],"mappings":"qLAAYA,E,0ECQCC,EAA0B,SAAC,GAIjC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,cAMMC,EAAe,SAACC,GACpBA,EAAMC,iBAENH,KAGF,OACE,wBAAQI,UAAU,kBAAlB,SAEE,sBACEC,OAAO,GACPC,SAAUL,EACVM,OAAQN,EAHV,SAKE,uBACEO,KAAK,OACLC,KAAK,eACLC,UAAQ,aACRN,UAAU,oBACVO,YAAY,yBACZC,MAAOd,EACPe,SAzBY,SAACX,GACnBH,EAASG,EAAMY,OAAOF,eCPbG,EAA6B,SAAC,GAAe,IAClDC,EADiD,EAAZC,MACdC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAAWC,OAE7D,OACE,sBAAMjB,UAAU,sBAAsBM,UAAQ,eAA9C,mBACMM,EADN,kB,0BFXQpB,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KGUL,IAAM0B,EAA+B,SAAC,GAGtC,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,eAcA,OACE,sBAAKpB,UAAU,UAAUM,UAAQ,cAAjC,UACE,cAAC,IAAD,CACEe,GAAG,IACHrB,UAAWsB,IAAW,gBAAiB,CACrCC,SAAUJ,IAAa3B,EAAOgC,MAEhCC,QAnBgB,WACpBL,EAAe5B,EAAOgC,MAapB,iBAUA,cAAC,IAAD,CACEH,GAAG,UACHrB,UAAWsB,IAAW,gBAAiB,CACrCC,SAAUJ,IAAa3B,EAAOkC,SAEhCD,QAzBmB,WACvBL,EAAe5B,EAAOkC,SAmBpB,oBAUA,cAAC,IAAD,CACEL,GAAG,aACHrB,UAAWsB,IAAW,gBAAiB,CACrCC,SAAUJ,IAAa3B,EAAOmC,YAEhCF,QA/BsB,WAC1BL,EAAe5B,EAAOmC,YAyBpB,2BCxCOC,EAAyC,SAAC,GAGhD,IAFLf,EAEI,EAFJA,MACAgB,EACI,EADJA,uBAEMC,EAAiBjB,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aAAWC,OAE5D,OACE,gDACEb,KAAK,SACLJ,UAAU,4BACL8B,EAAkB,CACrBL,QAASI,GAET,CAAEE,UAAU,IANhB,IAQEC,MAAO,CACLC,QAASH,EAAiB,EAAI,EAC9BI,OAAQJ,EAAiB,UAAY,QAVzC,+BCDSK,EAA0B,SAAC,GAKjC,IAJLtB,EAII,EAJJA,MACAM,EAGI,EAHJA,SACAC,EAEI,EAFJA,eACAS,EACI,EADJA,uBAEA,OACE,yBAAQ7B,UAAU,kBAAlB,UACE,cAAC,EAAD,CAAWa,MAAOA,IAElB,cAAC,EAAD,CACEM,SAAUA,EACVC,eAAgBA,IAGlB,cAAC,EAAD,CACEP,MAAOA,EACPgB,uBAAwBA,QCpBnBO,EAA4B,SAAC,GAInC,IAHLrB,EAGI,EAHJA,KACAsB,EAEI,EAFJA,aACAC,EACI,EADJA,aAGEC,EAGExB,EAHFwB,GACA7C,EAEEqB,EAFFrB,MACAsB,EACED,EADFC,UAGF,EAAwCwB,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCF,mBAAS9C,GAAzC,mBAAOiD,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,mBAAwB,MAAtD,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAWC,iBAAyB,MAE1CC,qBAAU,WACJF,EAASG,SACXH,EAASG,QAAQC,UAElB,CAACV,IAEJ,IAQMW,EAAoB,WACxB,OAAKT,EAASU,OAOVV,EAASU,SAAW3D,GACtBkD,EAAYlD,EAAM2D,aAClBX,GAAgB,KAKlBL,EAAaE,EAAI,CAAE7C,MAAOiD,EAASU,cACnCX,GAAgB,KAddJ,EAAaC,QACbG,GAAgB,KA2CpB,OACE,oBACE1C,UAAWsB,IACT,iBACA,CAAE,4BAA6BN,GAC/B,CAAE,0BAA2ByB,IAJjC,SAOE,qBACEzC,UAAU,sBACVsD,cAhEiB,WACrBZ,GAAgB,IAgEZa,aAhCoB,SAACzD,GACI,IAAzBA,EAAM0D,QAAQvC,SACX4B,GAEM/C,EAAM2D,WAAaZ,GAC5BH,GAAgB,GAChBI,EAAW,OAHXA,EAAWhD,EAAM2D,UAAY,OA0B/B,SAKGhB,EACC,sBACEvC,SAAUkD,EADZ,SAGE,uBACEhD,KAAK,OACLC,KAAK,gBACLL,UAAU,uBAEVQ,MAAOmC,EACPlC,SAzEc,SAACX,GACzB8C,EAAY9C,EAAMY,OAAOF,QAyEfL,OAAQiD,EACRM,UApDa,SAAC5D,GACN,WAAdA,EAAM6D,KACRjB,GAAgB,IAmDRkB,IAAKb,MAIT,qCACE,uBACE3C,KAAK,WACLC,KAAK,mBACLL,UAAU,wBACVS,SA3Ce,WACzB4B,EAAaE,EAAI,CAAEvB,WAAYA,KA2CrB6C,QAAS7C,IAEX,gCAAQtB,IACR,wBACEU,KAAK,SACLJ,UAAU,yBACV8D,aAAW,mBACXxD,UAAQ,aACRmB,QAhDa,WACvBa,EAAaC,cC3EJwB,EAA4B,SAAC,GAInC,IAHLlD,EAGI,EAHJA,MACAwB,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,OACE,oBAAItC,UAAU,WAAWM,UAAQ,YAAjC,SACGO,EAAMmD,KAAI,SAAAjD,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNsB,aAAcA,EACdC,aAAcA,GAHTvB,EAAKwB,UClBd0B,EAAW,oCAEjB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,WAAWD,EAASF,MAMxB,SAASI,EACPC,GAGa,IAFbC,EAEY,uDAFY,MACxBC,EACY,uDADI,KAEVC,EAAuB,CAAEF,UAS/B,OAPIC,IACFC,EAAQC,KAAOC,KAAKC,UAAUJ,GAC9BC,EAAQI,QAAU,CAChB,eAAgB,oCAIbb,EAAK,KACTc,MAAK,kBAAMC,MAAMhB,EAAWO,EAAKG,MACjCK,MAAK,SAAAE,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAGZ,OAAOF,EAASG,UAIf,IAAMC,EACN,SAAId,GAAJ,OAAoBD,EAAWC,IADzBc,EAEL,SAAId,EAAaE,GAAjB,OAAoCH,EAAWC,EAAK,OAAQE,IAFvDY,EAGJ,SAAId,EAAaE,GAAjB,OAAoCH,EAAWC,EAAK,QAASE,IAHzDY,EAIH,SAACd,GAAD,OAAiBD,EAAQC,EAAK,WC7B3Be,EAAa,SAACC,EAAgBd,GACzC,OAAOY,EAAA,iBAAuBE,GAAUd,IAG7Be,EAAa,SAACD,GACzB,OAAOF,EAAA,iBAAwBE,KCCpBE,EAAgB,WAC3B,MAA0BlD,mBAAiB,IAA3C,mBAAO3B,EAAP,KAAc8E,EAAd,KACA,EAA0BnD,mBAAS,IAAnC,mBAAO9C,EAAP,KAAcC,EAAd,KACA,EAAgC6C,mBAAiBhD,EAAOgC,KAAxD,mBAAOL,EAAP,KAAiByE,EAAjB,KACA,EAAwCpD,mBAAS,IAAjD,mBAAOqD,EAAP,KAAqBC,EAArB,KAEMC,EAAa,WACjBzB,YAAW,WACTwB,EAAgB,MACf,MAOL7C,qBAAU,WACR,IAAM+C,EAAcC,aAAaC,QAAQ,SAErCF,GACFL,EAASd,KAAKsB,MAAMH,MAErB,IAEH/C,qBAAU,WACRgD,aAAaG,QAAQ,QAASvB,KAAKC,UAAUjE,MAC5C,CAACA,IAEJ,IAAMwF,EAAS,uCAAG,4BAAAC,EAAA,+EDzCXhB,EAAA,wBCWO,OA8BI,OAERiB,EAFQ,OAIdZ,EAASY,GAJK,gDAMdT,EAAgB,KAAiBU,SAEjCT,IARc,yDAAH,qDAYf9C,qBAAU,WACRoD,MACC,IAEH,IAAMI,EC1DuB,SAAC5F,EAAe6F,GAC7C,IAAID,EAAe5F,EAenB,OAbI6F,IAAkBlH,EAAOgC,MAC3BiF,EAAe5F,EAAMC,QAAO,YAAoB,IAAjBE,EAAgB,EAAhBA,UAC7B,OAAQ0F,GACN,KAAKlH,EAAOkC,OACV,OAAQV,EACV,KAAKxB,EAAOmC,UACV,OAAOX,EACT,QACE,MAAM,IAAIoE,MAAM,yBAKjBqB,ED0CcE,CAAgB9F,EAAOM,GAEtCyF,EAAgB,uCAAG,8BAAAN,EAAA,mEAEjB5G,EAAM2D,OAFW,uBAGbwD,EAAU,CACdtE,GAAI,EACJvB,WAAW,EACX8F,OAtDM,KAuDNpH,MAAOA,EAAM2D,QAPI,SDvDlBiC,EAAY,UCgEmBuB,GATb,OASbE,EATa,OAWnBpB,GAAS,SAACqB,GAAD,4BAA2BA,GAA3B,CAAsCD,OAX5B,uDAcrBjB,EAAgB,wBAEhBC,IAhBqB,yBAkBrBpG,EAAS,IAlBY,4EAAH,qDAsBhBsH,EAAgB,uCAAG,WACvBzB,EACA0B,GAFuB,SAAAZ,EAAA,sEAKrBX,GAAS,SAACqB,GAAD,OAAuBA,EAAUhD,KAAI,SAACjD,GAC7C,OAAIA,EAAKwB,KAAOiD,EACP,2BAAKzE,GAASmG,GAGhBnG,QAVY,SAafwE,EAAWC,EAAQ0B,GAbJ,uDAerBpB,EAAgB,2BAEhBC,IAjBqB,yDAAH,wDAqBhBoB,EAAiBtG,EAAMuG,OAAM,SAACrG,GAAD,OAAgBA,EAAKC,aAElDqG,EAAe,uCAAG,sBAAAf,EAAA,sDACtB,IACMa,EACFtG,EAAMyG,SAAQ,SAAAvG,GAAI,OAChBkG,EAAiBlG,EAAKwB,GAAI,CAAEvB,WAAW,OAGrBH,EAAMC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAEnCsG,SAAQ,SAAAvG,GAAI,OACtBkG,EAAiBlG,EAAKwB,GAAI,CAAEvB,WAAW,OAG3C,SACA8E,EAAgB,2BAEhBC,IAhBoB,2CAAH,qDAoBfwB,EAAgB,uCAAG,WAAO/B,GAAP,SAAAc,EAAA,+EAEfb,EAAWD,GAFI,OAGrBG,GAAS,SAACqB,GAAD,OAAuBA,EAC7BlG,QAAO,SAAAC,GAAI,OAAIA,EAAKwB,KAAOiD,QAJT,gDAMrBM,EAAgB,2BAEhBC,IARqB,yDAAH,sDAqBtB,OACE,sBAAK/F,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,mBACA,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CACEN,MAAOA,EACPC,SAAUA,EACVC,cAAegH,IAGjB,yBAAS5G,UAAU,gBAAnB,SACGa,EAAMI,OAAS,GACd,qCACE,uBACEb,KAAK,WACLC,KAAK,YACLkC,GAAG,sBACHvC,UAAU,sBACVM,UAAQ,YACRmB,QAAS4F,IAEX,uBACErH,UAAU,4BACVwH,QAAQ,sBAFV,kCAOA,cAAC,EAAD,CACE3G,MAAO4F,EACPpE,aAAc4E,EACd3E,aAAciF,SAMrB1G,EAAMI,OAAS,GACd,cAAC,EAAD,CACEJ,MAAOA,EACPM,SAAUA,EACVC,eAAgBwE,EAChB/D,uBAnDmB,WACFhB,EACtBC,QAAO,SAACC,GAAD,OAAgBA,EAAKC,aAC5BgD,KAAI,SAACjD,GAAD,OAAgBA,EAAKwB,MAEXyB,KAAI,SAACzB,GAAD,OAAgBkD,EAAWlD,MAChDoD,GAAS,SAACqB,GAAD,OAAuBA,EAAUlG,QAAO,SAAAC,GAAI,OAAKA,EAAKC,sBAiD7D,sBACEhB,UAAU,QACVyH,QAAS5B,EAFX,UAIE,wBACEzF,KAAK,SACLJ,UAAU,gBACV8D,aAAW,sBACXrC,QA9KY,WAClBqE,EAAgB,OA+KXD,S,MEvMT6B,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,S","file":"static/js/main.b73f3ee6.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\n\ntype Props = {\n  title: string,\n  setTitle: (newTitle: string) => void,\n  onSaveNewTodo: () => void,\n};\n\nexport const Header: React.FC<Props> = ({\n  title,\n  setTitle,\n  onSaveNewTodo,\n}) => {\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onSaveNewTodo();\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n\n      <form\n        action=\"\"\n        onSubmit={handleSubmit}\n        onBlur={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          name=\"newTodoTitle\"\n          data-cy=\"createTodo\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={handleTitle}\n        />\n      </form>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoCount: React.FC<Props> = ({ todos }) => {\n  const activeTodosQty = todos.filter(todo => !todo.completed).length;\n\n  return (\n    <span className=\"todoapp__todo-count\" data-cy=\"todosCounter\">\n      {`${activeTodosQty} items left`}\n    </span>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  filterBy: Status,\n  onChangeFilter: (filterBy: Status) => void,\n};\n\nexport const TodosFilter: React.FC<Props> = ({\n  filterBy,\n  onChangeFilter,\n}) => {\n  const handleShowAll = () => {\n    onChangeFilter(Status.ALL);\n  };\n\n  const handleShowActive = () => {\n    onChangeFilter(Status.ACTIVE);\n  };\n\n  const handleShowCompleted = () => {\n    onChangeFilter(Status.COMPLETED);\n  };\n\n  return (\n    <nav className=\"filters\" data-cy=\"todosFilter\">\n      <NavLink\n        to=\"/\"\n        className={classNames('filters__link', {\n          selected: filterBy === Status.ALL,\n        })}\n        onClick={handleShowAll}\n      >\n        All\n      </NavLink>\n\n      <NavLink\n        to=\"/active\"\n        className={classNames('filters__link', {\n          selected: filterBy === Status.ACTIVE,\n        })}\n        onClick={handleShowActive}\n      >\n        Active\n      </NavLink>\n\n      <NavLink\n        to=\"/completed\"\n        className={classNames('filters__link', {\n          selected: filterBy === Status.COMPLETED,\n        })}\n        onClick={handleShowCompleted}\n      >\n        Completed\n      </NavLink>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onDeleteCompletedTodos: () => void,\n};\n\nexport const DeleteCompletedButton: React.FC<Props> = ({\n  todos,\n  onDeleteCompletedTodos,\n}) => {\n  const completedTodos = todos.filter(todo => todo.completed).length;\n\n  return (\n    <button\n      type=\"button\"\n      className=\"todoapp__clear-completed\"\n      {...(completedTodos ? ({\n        onClick: onDeleteCompletedTodos,\n      }) : (\n        { disabled: true }\n      ))}\n      style={{\n        opacity: completedTodos ? 1 : 0,\n        cursor: completedTodos ? 'pointer' : 'auto',\n      }}\n    >\n      Clear completed\n    </button>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\nimport { TodoCount } from '../TodoCount';\nimport { TodosFilter } from '../TodosFilter';\nimport { DeleteCompletedButton } from '../DeleteCompletedButton';\n\ntype Props = {\n  todos: Todo[],\n  filterBy: Status,\n  onChangeFilter: (filterBy: Status) => void,\n  onDeleteCompletedTodos: () => void,\n};\n\nexport const Footer: React.FC<Props> = ({\n  todos,\n  filterBy,\n  onChangeFilter,\n  onDeleteCompletedTodos,\n}) => {\n  return (\n    <footer className=\"todoapp__footer\">\n      <TodoCount todos={todos} />\n\n      <TodosFilter\n        filterBy={filterBy}\n        onChangeFilter={onChangeFilter}\n      />\n\n      <DeleteCompletedButton\n        todos={todos}\n        onDeleteCompletedTodos={onDeleteCompletedTodos}\n      />\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  onUpdateTodo: (id: number, parameter: Partial<Todo>) => void,\n  onDeleteTodo: (id: number) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  onUpdateTodo,\n  onDeleteTodo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n  const [expired, setExpired] = useState<number | null>(null);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInEditMode]);\n\n  const handleEditMode = () => {\n    setIsInEditMode(true);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleTitleUpdate = () => {\n    if (!newTitle.trim()) {\n      onDeleteTodo(id);\n      setIsInEditMode(false);\n\n      return;\n    }\n\n    if (newTitle.trim() === title) {\n      setNewTitle(title.trim());\n      setIsInEditMode(false);\n\n      return;\n    }\n\n    onUpdateTodo(id, { title: newTitle.trim() });\n    setIsInEditMode(false);\n  };\n\n  const handleTitleReset = (event: React.KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      setIsInEditMode(false);\n    }\n  };\n\n  const handleDoubleTouch = (event: React.TouchEvent) => {\n    if (event.touches.length === 1) {\n      if (!expired) {\n        setExpired(event.timeStamp + 400);\n      } else if (event.timeStamp <= expired) {\n        setIsInEditMode(true);\n        setExpired(null);\n      } else {\n        setExpired(event.timeStamp + 400);\n      }\n    }\n  };\n\n  const handleStatusChange = () => {\n    onUpdateTodo(id, { completed: !completed });\n  };\n\n  const handleTodoRemove = () => {\n    onDeleteTodo(id);\n  };\n\n  return (\n    <li\n      className={classNames(\n        'todolist__item',\n        { 'todolist__item--completed': completed },\n        { 'todolist__item--editing': isInEditMode },\n      )}\n    >\n      <div\n        className=\"todolist__view-item\"\n        onDoubleClick={handleEditMode}\n        onTouchStart={handleDoubleTouch}\n      >\n        {isInEditMode ? (\n          <form\n            onSubmit={handleTitleUpdate}\n          >\n            <input\n              type=\"text\"\n              name=\"editTodoTitle\"\n              className=\"todolist__edit-field\"\n              // placeholder=\"Empty todo will be deleted\"\n              value={newTitle}\n              onChange={handleTitleChange}\n              onBlur={handleTitleUpdate}\n              onKeyDown={handleTitleReset}\n              ref={inputRef}\n            />\n          </form>\n        ) : (\n          <>\n            <input\n              type=\"checkbox\"\n              name=\"toggleTodoStatus\"\n              className=\"todolist__toggle-item\"\n              onChange={handleStatusChange}\n              checked={completed}\n            />\n            <label>{title}</label>\n            <button\n              type=\"button\"\n              className=\"todolist__destroy-item\"\n              aria-label=\"Delete todo item\"\n              data-cy=\"deleteTodo\"\n              onClick={handleTodoRemove}\n            />\n          </>\n        )}\n      </div>\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  onUpdateTodo: (id: number, parameter: Partial<Todo>) => void,\n  onDeleteTodo: (id: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onUpdateTodo,\n  onDeleteTodo,\n}) => {\n  return (\n    <ul className=\"todolist\" data-cy=\"todosList\">\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          onUpdateTodo={onUpdateTodo}\n          onDeleteTodo={onDeleteTodo}\n        />\n      ))}\n    </ul>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: unknown = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data?: unknown) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data?: unknown) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (todo: Todo): Promise<Todo> => {\n  return client.post('/todos/', todo);\n};\n\nexport const updateTodo = (todoId: number, data: Partial<Todo>) => {\n  return client.patch(`/todos/${todoId}`, data);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\nimport { getVisibleTodos } from './helpers/getVisibleTodos';\nimport {\n  addTodo,\n  getTodos,\n  deleteTodo,\n  updateTodo,\n} from './api/todos';\n\nconst USER_ID = 7033;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [title, setTitle] = useState('');\n  const [filterBy, setFilterBy] = useState<Status>(Status.ALL);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const clearError = () => {\n    setTimeout(() => {\n      setErrorMessage('');\n    }, 3000);\n  };\n\n  const deleteError = () => {\n    setErrorMessage('');\n  };\n\n  useEffect(() => {\n    const loadedTodos = localStorage.getItem('todos');\n\n    if (loadedTodos) {\n      setTodos(JSON.parse(loadedTodos));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const loadTodos = async () => {\n    try {\n      const todosFromServer = await getTodos(USER_ID);\n\n      setTodos(todosFromServer);\n    } catch (error) {\n      setErrorMessage((error as Error).message);\n\n      clearError();\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const visibleTodos = getVisibleTodos(todos, filterBy);\n\n  const handleAddNewTodo = async () => {\n    try {\n      if (title.trim()) {\n        const newTodo = {\n          id: 0,\n          completed: false,\n          userId: USER_ID,\n          title: title.trim(),\n        };\n        const addedTodo = await addTodo(newTodo);\n\n        setTodos((prevTodos: Todo[]) => [...prevTodos, addedTodo]);\n      }\n    } catch {\n      setErrorMessage('Unable to add a todo');\n\n      clearError();\n    } finally {\n      setTitle('');\n    }\n  };\n\n  const handleUpdateTodo = async (\n    todoId: number,\n    parameterToUpdate: Partial<Todo>,\n  ) => {\n    try {\n      setTodos((prevTodos: Todo[]) => prevTodos.map((todo) => {\n        if (todo.id === todoId) {\n          return { ...todo, ...parameterToUpdate };\n        }\n\n        return todo;\n      }));\n\n      await updateTodo(todoId, parameterToUpdate);\n    } catch {\n      setErrorMessage('Unable to update a todo');\n\n      clearError();\n    }\n  };\n\n  const isAllCompleted = todos.every((todo: Todo) => todo.completed);\n\n  const handleToggleAll = async () => {\n    try {\n      if (isAllCompleted) {\n        todos.forEach(todo => (\n          handleUpdateTodo(todo.id, { completed: false })\n        ));\n      } else {\n        const activeTodos = todos.filter(todo => !todo.completed);\n\n        activeTodos.forEach(todo => (\n          handleUpdateTodo(todo.id, { completed: true })\n        ));\n      }\n    } catch {\n      setErrorMessage('Unable to update a todo');\n\n      clearError();\n    }\n  };\n\n  const handleRemoveTodo = async (todoId: number) => {\n    try {\n      await deleteTodo(todoId);\n      setTodos((prevTodos: Todo[]) => prevTodos\n        .filter(todo => todo.id !== todoId));\n    } catch {\n      setErrorMessage('Unable to delete a todo');\n\n      clearError();\n    }\n  };\n\n  const deleteCompletedTodos = () => {\n    const completedTodoIds = todos\n      .filter((todo: Todo) => todo.completed)\n      .map((todo: Todo) => todo.id);\n\n    completedTodoIds.map((id: number) => deleteTodo(id));\n    setTodos((prevTodos: Todo[]) => prevTodos.filter(todo => !todo.completed));\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n      <div className=\"todoapp__content\">\n        <Header\n          title={title}\n          setTitle={setTitle}\n          onSaveNewTodo={handleAddNewTodo}\n        />\n\n        <section className=\"todoapp__main\">\n          {todos.length > 0 && (\n            <>\n              <input\n                type=\"checkbox\"\n                name=\"toggleAll\"\n                id=\"todoapp__toggle-all\"\n                className=\"todoapp__toggle-all\"\n                data-cy=\"toggleAll\"\n                onClick={handleToggleAll}\n              />\n              <label\n                className=\"todoapp__toggle-all-label\"\n                htmlFor=\"todoapp__toggle-all\"\n              >\n                Mark all as complete\n              </label>\n\n              <TodoList\n                todos={visibleTodos}\n                onUpdateTodo={handleUpdateTodo}\n                onDeleteTodo={handleRemoveTodo}\n              />\n            </>\n          )}\n        </section>\n\n        {todos.length > 0 && (\n          <Footer\n            todos={todos}\n            filterBy={filterBy}\n            onChangeFilter={setFilterBy}\n            onDeleteCompletedTodos={deleteCompletedTodos}\n          />\n        )}\n      </div>\n      <div\n        className=\"error\"\n        hidden={!errorMessage}\n      >\n        <button\n          type=\"button\"\n          className=\"error__delete\"\n          aria-label=\"Delete error-button\"\n          onClick={deleteError}\n        />\n        {errorMessage}\n      </div>\n    </div>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const getVisibleTodos = (todos: Todo[], currentFilter: string) => {\n  let visibleTodos = todos;\n\n  if (currentFilter !== Status.ALL) {\n    visibleTodos = todos.filter(({ completed }) => {\n      switch (currentFilter) {\n        case Status.ACTIVE:\n          return !completed;\n        case Status.COMPLETED:\n          return completed;\n        default:\n          throw new Error('Unable to filter');\n      }\n    });\n  }\n\n  return visibleTodos;\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\nimport './styles/main.scss';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}